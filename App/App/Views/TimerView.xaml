<UserControl x:Class="App.Views.TimerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:App.Views"
             mc:Ignorable="d" 
             FontFamily="../Resources/Fonts/#Montserrat"
             xmlns:prism="http://prismlibrary.com/" xmlns:viewModel="clr-namespace:App.ViewModels"
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <viewModel:TimerViewModel x:Key="vm"/>
        <Style x:Key="BorderConfiguration" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#ececec" />
            <Style.Triggers >
                <DataTrigger Binding="{Binding IsMouseOver}" Value="True" >
                    <Setter Property= "Background" Value = "#e05656" ></Setter>
                </DataTrigger>
                <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property= "Background" Value = "#e05656" ></Setter>
                </Trigger>-->
            </Style.Triggers>
        </Style>

        <Style x:Key = "AddButtonTrigger" TargetType = "Ellipse">
            <Style.Triggers >
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property = "Fill">
                        <Setter.Value>
                            <ImageBrush ImageSource="/Views/play.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonCancel" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="white" ></Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property ="IsMouseOver" Value="True">
                    <Setter Property= "Foreground"  >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Green" Offset="0"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Grid Background="#FBFBFB">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition MaxHeight="50" MinHeight="10" Height="0.2"/>
            <RowDefinition MinHeight="200"/>
        </Grid.RowDefinitions>
        <Button HorizontalAlignment="Left" Margin="10,0,0,0" Grid.Row="0" Width="25" Height="25" FontSize="16" Command="{Binding Source = {StaticResource vm}, Path = OpenPopUpCreateCommand }" >
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Grid >
                        <Popup x:Name="ElementPopup" IsOpen="{Binding Source = {StaticResource vm}, Path = CreatePopUpState}"
                                        StaysOpen="True"
                                        Placement="left"
                                        PlacementTarget="{x:Null}"  Focusable="False"
                                        SnapsToDevicePixels="True">
                            <Border Background="White" Width="250" Height="450" CornerRadius="15" Padding="10">
                                <StackPanel Margin="0,10,10,0">
                                    <RadioButton IsChecked="{Binding IsDemostration}" GroupName="CounterStyle" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="15" >
                                        Demostration
                                    </RadioButton>
                                    <Grid Margin="25,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="5 seg" Foreground="#8f8f8f"/>
                                        <TextBlock Grid.Column="1" Text="2 seg" Foreground="#8f8f8f"/>
                                        <TextBlock Grid.Column="2" Text="4 seg" Foreground="#8f8f8f"/>
                                    </Grid><RadioButton IsChecked="{Binding IsLowFocus}" GroupName="CounterStyle" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="15" >
                                        Low Focus
                                    </RadioButton>
                                    <Grid Margin="25,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="10 min" Foreground="#8f8f8f"/>
                                        <TextBlock Grid.Column="1" Text="5 min" Foreground="#8f8f8f"/>
                                        <TextBlock Grid.Column="2" Text="10 min" Foreground="#8f8f8f"/>
                                    </Grid>
                                    <RadioButton IsChecked="{Binding IsStandard}" GroupName="CounterStyle" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="15" >
                                        Standard
                                    </RadioButton>
                                    <Grid Margin="25,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="25 min" Foreground="#8f8f8f"/>
                                        <TextBlock Grid.Column="1" Text="5 min" Foreground="#8f8f8f"/>
                                        <TextBlock Grid.Column="2" Text="15 min" Foreground="#8f8f8f"/>
                                    </Grid>

                                    <RadioButton IsChecked="{Binding IsHighFocus}" GroupName="CounterStyle" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="15" >
                                        High Focus
                                    </RadioButton>
                                    <Grid Margin="25,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="40 min" Foreground="#8f8f8f"/>
                                        <TextBlock Grid.Column="1" Text="8 min" Foreground="#8f8f8f"/>
                                        <TextBlock Grid.Column="2" Text="20 min" Foreground="#8f8f8f"/>
                                    </Grid>

                                    <RadioButton IsChecked="{Binding IsIntenseFocus}" GroupName="CounterStyle" Margin="10,10,0,5" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="15" >
                                        Intense Focus
                                    </RadioButton>
                                    <Grid Margin="25,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="55 min" Foreground="#8f8f8f"/>
                                        <TextBlock Grid.Column="1" Text="10 min" Foreground="#8f8f8f"/>
                                        <TextBlock Grid.Column="2" Text="25 min" Foreground="#8f8f8f"/>
                                    </Grid>

                                    <RadioButton Name="CustomRadio" IsChecked="{Binding IsCustom}" GroupName="CounterStyle" Margin="10,10,0,10" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="15" >
                                        Custom
                                    </RadioButton>
                                    <Grid Margin="5,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding ElementName=workSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0"  Foreground="#8f8f8f" />
                                        <TextBlock Text="work" Grid.Column="1" HorizontalAlignment="Right" Foreground="#8f8f8f" />
                                    </Grid>
                                    <Slider IsEnabled="{Binding ElementName=CustomRadio, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,5" Maximum="59"  TickFrequency="1" IsSnapToTickEnabled="True" Name="workSlider" Value="{Binding WorkSliderValue}" />
                                    <Grid Margin="5,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding ElementName=shortSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0"  Foreground="#8f8f8f" />
                                        <TextBlock Text="short" Grid.Column="1" HorizontalAlignment="Right" Foreground="#8f8f8f" />
                                    </Grid>
                                    <Slider IsEnabled="{Binding ElementName=CustomRadio, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,5" Maximum="59"  TickFrequency="1" IsSnapToTickEnabled="True" Name="shortSlider" Value="{Binding ShortSliderValue}" />
                                    
                                    <Grid Margin="5,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding ElementName=longSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0"  Foreground="#8f8f8f" />
                                        <TextBlock Text="long" Grid.Column="1" HorizontalAlignment="Right" Foreground="#8f8f8f" />
                                    </Grid>
                                    <Slider IsEnabled="{Binding ElementName=CustomRadio, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,5" Maximum="59"  TickFrequency="1" IsSnapToTickEnabled="True" Name="longSlider" Value="{Binding LongSliderValue}" />
                          
                                    <Button Style="{StaticResource ButtonCancel}" 
                                                Command="{Binding  Source = {StaticResource vm}, Path = CancelCreateCommand}"
                                                CommandParameter="{Binding}"                                                                
                                                Grid.Column="2" Margin="0 0 5 0" Content="Fechar">
                                        <Button.Resources>
                                            <Style TargetType="Border">
                                                <Setter Property="CornerRadius" Value="2"></Setter>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                </StackPanel>
                            </Border>
                        </Popup>
                        <Ellipse Style="{StaticResource AddButtonTrigger}"  >
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="/Views/gear.png"/>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.25*"/>
                <RowDefinition Height="*" MinHeight="50"/>
                <RowDefinition Height="6*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
                <Grid Grid.Row="1" MinHeight="50" MaxHeight="50" VerticalAlignment="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="125"/>
                        <ColumnDefinition Width="125"/>
                        <ColumnDefinition Width="125"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name ="WorkButton" Command="{Binding WorkCommand}" Grid.Column="1" Content="work" Margin="10,0 " Width="80" Background="{Binding WorkButtonBackground}" Foreground="{Binding WorkButtonForeground}" BorderBrush="{Binding WorkButtonBorderBrush}">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="15"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Command="{Binding ShortCommand}" Grid.Column="2" Content="short" Margin="10,0" Width="80" Background="{Binding ShortButtonBackground}" Foreground="{Binding ShortButtonForeground}" BorderBrush="{Binding ShortButtonBorderBrush}">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="15"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Command="{Binding LongCommand}" Grid.Column="3" Content="long" Margin="10,0" Width="80" Background="{Binding LongButtonBackground}" Foreground="{Binding LongButtonForeground}" BorderBrush="{Binding LongButtonBorderBrush}">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="15"/>
                            </Style>
                        </Button.Resources>
                    </Button>

                </Grid>
                <ContentControl Grid.Row="2" prism:RegionManager.RegionName="CountDownView"/>
            </Grid>
        </Grid>
</UserControl>
